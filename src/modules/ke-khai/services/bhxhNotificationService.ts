// Interface cho response t·ª´ API BHXH
interface BhxhNotificationResponse {
  success: boolean;
  data?: any;
  message?: string;
  error?: string;
}

// Interface cho response th·ª±c t·∫ø t·ª´ API BHXH
interface BhxhApiResponse {
  status: string;
  msg: string;
  data?: any;
}

// Service ƒë·ªÉ g·ªçi API th√¥ng b√°o BHXH
class BhxhNotificationService {
  private readonly baseUrl = 'https://dichvucong.baohiemxahoi.gov.vn';

  // Token v√† headers m·∫∑c ƒë·ªãnh
  private readonly defaultHeaders = {
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'Accept': 'application/json, text/plain, */*',
    'Accept-Encoding': 'gzip, deflate, br, zstd',
    'Content-Type': 'application/json',
    'sec-ch-ua-platform': '"Windows"',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'sec-ch-ua-mobile': '?0',
    'Access-Control-Allow-Origin': '*',
    'X-CLIENT': 'U2FsdGVkX1/S+muWkU4UTOvj87OZ58DCa+kaj/pWdC8tDPFf99Ag6pRxOwfvEjBsIWDu33H9S+bArTukO6DdwHk33sHDV/qW50/O29ANLsqdrAxI7kuEaIbMhwTwLd/E',
    'Origin': 'https://dichvucong.baohiemxahoi.gov.vn',
    'Sec-Fetch-Site': 'same-origin',
    'Sec-Fetch-Mode': 'cors',
    'Sec-Fetch-Dest': 'empty',
    'Referer': 'https://dichvucong.baohiemxahoi.gov.vn/',
    'Accept-Language': 'en-US,en;q=0.9'
  };

  // Token Bearer - c·∫ßn c·∫≠p nh·∫≠t khi h·∫øt h·∫°n
  private bearerToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoiMTYwMjE4NzY3OCIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9jbGFpbXMvcm9sZSI6InVzZXIiLCJzdWIiOiIxNjAyMTg3Njc4IiwiaXNfcHVibGljIjoiMCIsImlzX2FkbWluIjoiMCIsImNsaWVudF9pZCI6IllXWTBOakl3TXpZdE1UazFNeTAwTnpsaExXSXhaRGt0Tm1VMU5HUXhOVGN5TUdFNExUWXpPRGMzTmpRek16ZzNORFkyTmprNU1RPT0iLCJ2bmNvbm5lY3QiOiIwIiwibG9haWRvaXR1b25nIjoiMSIsImV4cCI6MTc0OTY5NzQ1MSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoiaHR0cDovL2xvY2FsaG9zdDo0MjAwIn0.1v6SnDwv8jpxVx1NeeLONtwI84TooA_0mbfMIT9kDT0';

  // G·ªçi API ƒë·ªÉ l·∫•y th√¥ng b√°o BHXH theo s·ªë h·ªì s∆°
  async getNotificationByHoSo(soHoSo: string): Promise<BhxhNotificationResponse> {
    try {
      console.log('üîî Getting BHXH notification for ho so:', soHoSo);

      if (!soHoSo || soHoSo.trim() === '') {
        return {
          success: false,
          message: 'S·ªë h·ªì s∆° kh√¥ng h·ª£p l·ªá'
        };
      }

      const response = await fetch(`${this.baseUrl}/GetValues`, {
        method: 'POST',
        headers: {
          ...this.defaultHeaders,
          'Authorization': `Bearer ${this.bearerToken}`
        },
        body: JSON.stringify({
          code: "176",
          data: {
            soHoSo: soHoSo.trim()
          }
        })
      });

      if (!response.ok) {
        console.error('BHXH API response not ok:', response.status, response.statusText);
        return {
          success: false,
          error: `HTTP ${response.status}: ${response.statusText}`
        };
      }

      const apiResponse: BhxhApiResponse = await response.json();
      console.log('üîî BHXH API response:', apiResponse);

      // Parse response t·ª´ API BHXH
      const isSuccess = apiResponse.status === 'success';

      return {
        success: isSuccess,
        data: apiResponse,
        message: apiResponse.msg,
        error: isSuccess ? undefined : apiResponse.msg
      };

    } catch (error) {
      console.error('Error calling BHXH notification API:', error);
      return {
        success: false,
        error: error instanceof Error ? error.message : 'L·ªói kh√¥ng x√°c ƒë·ªãnh'
      };
    }
  }

  // G·ªçi API cho nhi·ªÅu s·ªë h·ªì s∆° c√πng l√∫c
  async getNotificationsForMultipleHoSo(soHoSoList: string[]): Promise<Record<string, BhxhNotificationResponse>> {
    const results: Record<string, BhxhNotificationResponse> = {};
    
    // G·ªçi API tu·∫ßn t·ª± ƒë·ªÉ tr√°nh qu√° t·∫£i server
    for (const soHoSo of soHoSoList) {
      if (soHoSo && soHoSo.trim() !== '') {
        try {
          results[soHoSo] = await this.getNotificationByHoSo(soHoSo);
          // Delay nh·ªè gi·ªØa c√°c request ƒë·ªÉ tr√°nh rate limiting
          await new Promise(resolve => setTimeout(resolve, 200));
        } catch (error) {
          console.error(`Error getting notification for ${soHoSo}:`, error);
          results[soHoSo] = {
            success: false,
            error: 'L·ªói khi g·ªçi API'
          };
        }
      }
    }

    return results;
  }

  // C·∫≠p nh·∫≠t Bearer token khi c·∫ßn
  updateBearerToken(newToken: string) {
    this.bearerToken = newToken;
    console.log('üîë Updated BHXH Bearer token');
  }

  // Format th√¥ng b√°o ƒë·ªÉ hi·ªÉn th·ªã
  formatNotificationMessage(response: BhxhNotificationResponse): string {
    // ∆Øu ti√™n hi·ªÉn th·ªã message t·ª´ response
    if (response.message) {
      return response.message;
    }

    if (!response.success) {
      return response.error || 'L·ªói kh√¥ng x√°c ƒë·ªãnh';
    }

    if (!response.data) {
      return 'Kh√¥ng c√≥ d·ªØ li·ªáu';
    }

    // N·∫øu data l√† BhxhApiResponse, l·∫•y msg
    if (response.data.msg) {
      return response.data.msg;
    }

    // Fallback cho c√°c tr∆∞·ªùng h·ª£p kh√°c
    if (typeof response.data === 'string') {
      return response.data;
    }

    if (response.data.message) {
      return response.data.message;
    }

    if (response.data.thongBao) {
      return response.data.thongBao;
    }

    return JSON.stringify(response.data);
  }

  // Ki·ªÉm tra tr·∫°ng th√°i th√¥ng b√°o
  getNotificationStatus(response: BhxhNotificationResponse): 'success' | 'warning' | 'error' | 'info' {
    // Ki·ªÉm tra status t·ª´ API tr∆∞·ªõc
    if (response.data && response.data.status) {
      const apiStatus = response.data.status.toLowerCase();
      if (apiStatus === 'success') {
        // Ki·ªÉm tra n·ªôi dung message ƒë·ªÉ x√°c ƒë·ªãnh tr·∫°ng th√°i c·ª• th·ªÉ
        const message = this.formatNotificationMessage(response).toLowerCase();

        if (message.includes('ƒëang x·ª≠ l√Ω') || message.includes('ch·ªù') || message.includes('pending')) {
          return 'warning';
        }

        if (message.includes('th√†nh c√¥ng') || message.includes('ƒë√£ duy·ªát') || message.includes('ho√†n th√†nh') || message.includes('ƒë√£ ho√†n th√†nh')) {
          return 'success';
        }

        // M·∫∑c ƒë·ªãnh cho status success nh∆∞ng ƒëang x·ª≠ l√Ω
        return 'warning';
      }

      if (apiStatus === 'error' || apiStatus === 'failed') {
        return 'error';
      }
    }

    if (!response.success) {
      return 'error';
    }

    if (!response.data) {
      return 'warning';
    }

    // Logic ƒë·ªÉ x√°c ƒë·ªãnh tr·∫°ng th√°i d·ª±a tr√™n n·ªôi dung th√¥ng b√°o
    const message = this.formatNotificationMessage(response).toLowerCase();

    if (message.includes('th√†nh c√¥ng') || message.includes('ƒë√£ duy·ªát') || message.includes('ho√†n th√†nh') || message.includes('ƒë√£ ho√†n th√†nh')) {
      return 'success';
    }

    if (message.includes('ch·ªù') || message.includes('ƒëang x·ª≠ l√Ω') || message.includes('pending') || message.includes('x·ª≠ l√Ω')) {
      return 'warning';
    }

    if (message.includes('l·ªói') || message.includes('t·ª´ ch·ªëi') || message.includes('th·∫•t b·∫°i') || message.includes('kh√¥ng t√¨m th·∫•y')) {
      return 'error';
    }

    return 'info';
  }
}

// Export singleton instance
const bhxhNotificationService = new BhxhNotificationService();
export default bhxhNotificationService;
